argv = ['/home/jhs/src/iris/hosting/ruby-inabox/build/bin/node-waf', 'configure', 'build']
blddir = '/home/jhs/src/iris/fastcgi/node_modules/daemon/build'
commands = {'dist': 0, 'configure': True, 'distcheck': 0, 'install': 0, 'build': True, 'clean': 0, 'distclean': 0, 'check': 0, 'uninstall': 0}
cwd = '/home/jhs/src/iris/fastcgi/node_modules/daemon'
environ = {'npm_package_author_url': 'Slashed', 'npm_config_engine_strict': '', 'npm_config_searchopts': '', 'npm_config_fetch_retry_factor': '10', 'npm_package_contributors_3_name': 'Zak Taylor', 'npm_config_group': '1000', 'npm_config_browser': 'google-chrome', 'npm_config_global': '', 'npm_package_dist_shasum': 'abd248cec90afd1ba91910f8101259ce8fe05d99', 'npm_package_contributors_5_email': 'charlie@charlieistheman.com', 'SHELL': '/bin/bash', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/', 'MANDATORY_PATH': '/usr/share/gconf/ubuntu.mandatory.path', 'HISTSIZE': '50000', 'npm_config_pre': '', 'npm_config_cache': '/home/jhs/.npm', 'npm_config_tmp': '/home/jhs/tmp', 'npm_package_engines_node': '>= 0.4.0', 'npm_config_argv': '{"remain":["daemon@0.5.1"],"cooked":["install","daemon@0.5.1"],"original":["install","daemon@0.5.1"]}', 'npm_config_cache_lock_wait': '10000', 'npm_package_contributors_6_email': 'josh@nodejitsu.com', 'npm_package_scripts_preinstall': 'bash ./install', 'PYTHONPATH': '/home/jhs/src/iris/hosting/ruby-inabox/build/lib/python2.7/site-packages:', 'npm_config_save_bundle': '', 'npm_config_save_dev': '', 'npm_config_init_version': '0.0.0', 'DBUS_SESSION_BUS_ADDRESS': 'unix:abstract=/tmp/dbus-J1mZmLOueb,guid=51ac322d22b011243dfcf2260000000c', 'npm_lifecycle_event': 'preinstall', 'DESKTOP_SESSION': 'ubuntu', 'npm_config_init_author_name': '', 'npm_config_yes': '', 'npm_config_usage': '', 'npm_package_description': 'Add-on for creating *nix daemons', 'npm_config_shell': '/bin/bash', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:', 'npm_config_ignore': '', 'npm_config_ca': '"-----BEGIN CERTIFICATE-----\\nMIIChzCCAfACCQDauvz/KHp8ejANBgkqhkiG9w0BAQUFADCBhzELMAkGA1UEBhMC\\nVVMxCzAJBgNVBAgTAkNBMRAwDgYDVQQHEwdPYWtsYW5kMQwwCgYDVQQKEwNucG0x\\nIjAgBgNVBAsTGW5wbSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxDjAMBgNVBAMTBW5w\\nbUNBMRcwFQYJKoZIhvcNAQkBFghpQGl6cy5tZTAeFw0xMTA5MDUwMTQ3MTdaFw0y\\nMTA5MDIwMTQ3MTdaMIGHMQswCQYDVQQGEwJVUzELMAkGA1UECBMCQ0ExEDAOBgNV\\nBAcTB09ha2xhbmQxDDAKBgNVBAoTA25wbTEiMCAGA1UECxMZbnBtIENlcnRpZmlj\\nYXRlIEF1dGhvcml0eTEOMAwGA1UEAxMFbnBtQ0ExFzAVBgkqhkiG9w0BCQEWCGlA\\naXpzLm1lMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDLI4tIqPpRW+ACw9GE\\nOgBlJZwK5f8nnKCLK629Pv5yJpQKs3DENExAyOgDcyaF0HD0zk8zTp+ZsLaNdKOz\\nGn2U181KGprGKAXP6DU6ByOJDWmTlY6+Ad1laYT0m64fERSpHw/hjD3D+iX4aMOl\\ny0HdbT5m1ZGh6SJz3ZqxavhHLQIDAQABMA0GCSqGSIb3DQEBBQUAA4GBAC4ySDbC\\nl7W1WpLmtLGEQ/yuMLUf6Jy/vr+CRp4h+UzL+IQpCv8FfxsYE7dhf/bmWTEupBkv\\nyNL18lipt2jSvR3v6oAHAReotvdjqhxddpe5Holns6EQd1/xEZ7sB1YhQKJtvUrl\\nZNufy1Jf1r0ldEGeA+0ISck7s+xSh9rQD2Op\\n-----END CERTIFICATE-----"', 'npm_config_globalconfig': '/home/jhs/src/iris/hosting/ruby-inabox/build/etc/npmrc', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'npm_package_contributors_2_email': 'mail@substack.net', 'npm_config_parseable': '', 'npm_package_contributors_1_email': 'charlie.robbins@gmail.com', 'LESSOPEN': '|lesspipe %s', 'npm_config_userignorefile': '/home/jhs/.npmignore', 'USER': 'jhs', 'INPUTRC': '/etc/inputrc', 'npm_package_author_name': 'Arthur', 'npm_config_versions': '', 'XAUTHORITY': '/home/jhs/.Xauthority', 'SESSION_MANAGER': 'local/two:@/tmp/.ICE-unix/1422,unix/two:/tmp/.ICE-unix/1422', 'IRCSERVER': 'irc.freenode.org', 'npm_config_cache_lock_stale': '60000', 'npm_config_init_author_url': '', 'npm_config_fetch_retry_maxtimeout': '60000', 'npm_config_unsafe_perm': 'true', 'COMPIZ_CONFIG_PROFILE': 'ubuntu', 'WINDOWID': '54526223', 'EDITOR': 'vim', 'npm_config_email': 'jhs@iriscouch.com', 'IRCNICK': 'jhs', 'GPG_AGENT_INFO': '/tmp/keyring-88gUmY/gpg:0:1', 'npm_config_proxy': '', 'npm_config_depth': 'null', 'npm_config_umask': '022', 'npm_package_contributors_4_name': 'Daniel Bartlett', 'GDMSESSION': 'ubuntu', 'npm_config_json': '', 'npm_package_contributors_0_name': 'Pedro Teixeira', 'npm_config_editor': 'vim', 'XDG_SEAT_PATH': '/org/freedesktop/DisplayManager/Seat0', 'npm_config_user_agent': 'npm/1.1.33 node/v0.8.1', 'npm_package_repository_type': 'git', 'npm_package_contributors_1_name': 'Charlie Robbins', 'npm_config_npat': '', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'npm_config_init_module': '/home/jhs/.npm-init.js', 'UBUNTU_MENUPROXY': 'libappmenu.so', 'npm_config_long': '', 'npm_config_searchsort': 'name', 'npm_package_author_email': 'arthur@norgic.com', 'npm_lifecycle_script': 'bash ./install', 'COLORTERM': 'gnome-terminal', 'PAGER': 'less', 'npm_config_git': 'git', 'npm_package_readme': '"# daemon.node\\n\\nA C++ add-on for Node.js to enable simple daemons in Javascript plus some useful wrappers in Javascript.\\n\\n## Installation\\n\\n### Installing daemon.node with npm\\n```\\n  [sudo] npm install daemon\\n```\\n\\n### Installing daemon.node locally \\n```\\n  node-waf configure build  \\n```\\n\\n## Usage\\n\\n### Caveats Regarding Forking Safety\\n\\nAs of v0.6, node.js has not been fork-safe. What this means for you is that **all daemonization should happen on the first tick and not as part of an asynchronous action**. The easiest way to ensure this is to daemonize your process very early in the script, near the \\"require\\" block.\\n\\n`daemon.kill`, however, is still asynchronous.\\n\\n### Starting a daemon:\\nStarting a daemon is easy, just call daemon.start() and daemon.lock().\\n\\n``` js\\nvar daemon = require(\'daemon\'),\\n    pid;\\n\\npid = daemon.start(\'stdout.log\', \'stderr.log\');\\ndaemon.lock(\'/tmp/yourprogram.pid\');\\n```\\n\\n`daemon.start` daemonizes your script\'s process and redirects stdio to the specified files. `daemon.lock` places a lockfile on your daemon.\\n\\nThis library also exposes a higher level facility through javascript for starting daemons:\\n\\n``` js\\n  var daemon = require(\'daemon\'),\\n      pid;\\n  \\n  pid = daemon.daemonize({ stdout: \'somefile.log\', stderr: \'error.log\' }, \'/tmp/yourprogram.pid\');\\n  console.log(\'Daemon started successfully with pid: \' + pid);\\n```\\n\\nIf you wish you can also simply pass a single pass which you wish to be used for both `stdout` and `stderr`:\\n\\n``` js\\n  var daemon = require(\'daemon\'),\\n      pid;\\n  \\n  pid = daemon.daemonize(\'stdout-and-stderr.log\', \'/tmp/yourprogram.pid\');\\n  console.log(\'Daemon started successfully with pid: \' + pid);\\n```\\n\\n### Methods\\n\\n#### daemon.start(stdout[, stderr])\\n  Takes two filenames, one for `stdout` and one for `stderr`. If only `stdout` is supplied, `stderr` will use the same filename. If no arguments are passed, `stdout` and `stderr` output will be sent to `/dev/null`. Returns the process pid.\\n#### daemon.lock(\'/tmp/lockfile.pid\')\\n  Try to lock the file. If it\'s unable to OPEN the file it will exit. If it\'s unable to get a LOCK on the file it will return false. Else it will return true.\\n#### daemon.daemonize({ stdout: \'stdout.log\', stderr: \'stderr.log\' }, \'/tmp/lockfile.pid\', [cb])\\n  A convenience wrapper around `daemon.start` and `daemon.lock`. Returns pid, optionally calls `cb(err, pid)` for error handling and backwards compatibility. *This method is still synchronous*.\\n#### daemon.kill(lockfile, cb)\\n  Kills the process specified in the lockfile and cleans the file. Unlike every other method in this library, this one is asynchronous.\\n#### daemon.closeStdin()\\n  Closes stdin and reopens fd as /dev/null.\\n#### daemon.closeStdout()\\n  Closes stdout and reopens fd as /dev/null.\\n#### daemon.closeStderr()\\n  Closes stderr and reopens fd as /dev/null.\\n#### daemon.closeStdio()\\n  Closes std[in|out|err] and reopens fd as /dev/null.\\n#### daemon.chroot(\'/path_to_chroot_to\')\\n  Attempts to chroot the process, returns exception on error, returns true on success.\\n#### daemon.setreuid(1000)\\n  Change the effective user of the process. Can take either an integer (UID) or a string (Username). Returns exceptions on error and true on success.\\n\\n### The Fine Print\\n\\nThis library is available under the MIT LICENSE. See the LICENSE file for more details. It was originally created by [Slashed][2] and has been forked/improved/hacked upon by a lot of good people. Special thanks to [Isaacs][5] for npm and a great example in [glob][6].\\n\\n#### Author: [Slashed](http://github.com/slashed)\\n#### Contributors: [Charlie Robbins](http://nodejitsu.com), [Pedro Teixeira](https://github.com/pgte), [James Halliday](https://github.com/substack), [Zak Taylor](https://github.com/dobl), [Daniel Bartlett](https://github.com/danbuk), [Charlie McConnell](https://github.com/AvianFlu)\\n\\n[0]: http://slashed.posterous.com/writing-daemons-in-javascript-with-nodejs-0\\n[1]: https://github.com/pgte/fugue/blob/master/deps/daemon.cc\\n[2]: https://github.com/slashed/daemon.node\\n[3]: https://github.com/substack/daemon.node/\\n[4]: https://github.com/dobl/daemon.node\\n[5]: https://github.com/isaacs/npm\\n[6]: https://github.com/isaacs/node-glob\\n"', 'npm_config_rollback': 'true', 'npm_package_repository_url': 'http://github.com/indexzero/daemon.node.git', 'HOME': '/home/jhs', 'DISPLAY': ':0', 'npm_config_save_optional': '', 'LANG': 'en_US.UTF-8', 'LESS': '-i -# 1', 'npm_config_save': '', 'npm_config_registry': 'https://registry.npmjs.org/', 'npm_config_unicode': 'true', 'npm_config_production': '', 'npm_config_message': '%s', 'npm_config_always_auth': '', 'npm_config_prefix': '/home/jhs/src/iris/hosting/ruby-inabox/build', 'npm_config_searchexclude': '', 'npm_config_loglevel': 'http', 'npm_config_cache_lock_retries': '10', 'npm_config_strict_ssl': 'true', 'npm_package_contributors_2_name': 'James Halliday', 'npm_package_main': './lib/daemon', 'npm_config_tag': 'latest', 'DEFAULTS_PATH': '/usr/share/gconf/ubuntu.default.path', 'LC_COLLATE': 'POSIX', 'npm_config_globalignorefile': '/home/jhs/src/iris/hosting/ruby-inabox/build/etc/npmignore', 'npm_config_version': '', 'npm_package_contributors_0_email': 'pedro.teixeira@gmail.com', 'npm_config_force': '', 'LOGNAME': 'jhs', 'npm_config_user': '1000', '_': '/home/jhs/src/iris/hosting/ruby-inabox/build/bin/node-waf', 'npm_config_link': '', 'npm_config___registry': 'http://pronpm.pronpm.com:5984/', 'npm_package_name': 'daemon', 'npm_config_userconfig': '/home/jhs/.npmrc', 'XDG_CURRENT_DESKTOP': 'Unity', 'npm_config_dev': '', 'npm_config_rebuild_bundle': 'true', 'npm_config_npaturl': 'http://npat.npmjs.org/', 'npm_config_username': 'jhs', 'npm_package_contributors_6_name': 'Josh Holbrook', 'GNOME_KEYRING_CONTROL': '/tmp/keyring-88gUmY', 'PATH': '/home/jhs/src/iris/hosting/ruby-inabox/build/lib/node_modules/npm/bin/node-gyp-bin:/home/jhs/src/iris/fastcgi/node_modules/daemon/node_modules/.bin:/home/jhs/src/iris/fastcgi/node_modules/.bin:./node_modules/.bin:/home/jhs/src/iris/hosting/ruby-inabox/build/bin:/home/jhs/bin:/bin:/usr/bin:/usr/local/bin:/opt/bin:/usr/X11R6/bin', 'npm_package_contributors_5_name': 'Charlie McConnell', 'npm_config_coverage': '', 'SSH_AGENT_PID': '1459', 'TERM': 'xterm', 'XDG_SESSION_PATH': '/org/freedesktop/DisplayManager/Session0', 'npm_config_node_version': '0.8.1', 'npm_config_onload_script': '', 'npm_config_description': 'true', 'npm_config_fetch_retry_mintimeout': '10000', 'npm_config_viewer': 'man', 'npm_config_fetch_retries': '2', 'npm_config_cache_max': 'null', 'SSH_AUTH_SOCK': '/tmp/keyring-88gUmY/ssh', 'npm_config_proprietary_attribs': 'true', 'npm_package_devDependencies_vows': '0.6.x', 'npm_package_contributors_4_email': 'dan@f-box.org', 'npm_package_version': '0.5.1', 'npm_config_https_proxy': '', 'IRCNAME': 'Jason Smith', 'XDG_SESSION_COOKIE': '7a46ca4fc6d68602ffe5835400000008-1342584401.396973-1011617318', 'npm_config_init_author_email': '', 'npm_package_contributors_3_email': 'zak@dobl.com', 'npm_config_outfd': '1', 'HISTCONTROL': 'ignoredups', 'SHLVL': '2', 'PWD': '/home/jhs/src/iris/fastcgi/node_modules/daemon', 'npm_config_cache_min': '', 'npm_config_color': 'true'}
files = []
hash = 0
options = {'compile_targets': None, 'force': False, 'verbose': 0, 'nocache': False, 'progress_bar': 0, 'destdir': '', 'keep': False, 'zones': '', 'blddir': '', 'prefix': '/usr/local/', 'jobs': 2, 'srcdir': '', 'check_cxx_compiler': 'g++ icpc sunc++'}
srcdir = '/home/jhs/src/iris/fastcgi/node_modules/daemon'
